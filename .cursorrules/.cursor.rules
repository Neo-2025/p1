# Project-Specific Cursor Rules for S4 Development

## Working Directory & Context
[context]
root_directory = "/home/neo/S4"
project_directory = "/home/neo/S4/p1"
knowledge_base = "/home/neo/S4/kb"

[workflow]
always_work_from_root = true
context_preservation = "required"
knowledge_base_integration = "required"

[development]
mode = "framework_refinement"
project_type = "microsaas_mvp"
framework_testing = true
documentation_required = true

## Project Structure
[structure]
mvp_development = "/home/neo/S4/p1"
documentation = "/home/neo/S4/kb"
templates = "/home/neo/S4/kb/templates"

## Dependencies
[versions]
nextjs = "14.1.0"
react = "18.2.0"
typescript = "5.3.3"
supabase_js = "2.39.3"
supabase_auth = "0.9.0"
drizzle_orm = "0.29.3"
tailwindcss = "3.4.1"
stripe = "14.14.0"

## Core Configuration
[context]
tech_stack = "Windows 10 WSL2, Next.js 14, Supabase, TypeScript"
path_conventions = "Hybrid Windows/WSL paths"
wsl_distro = "Debian"
supabase_cli_version = "3.2.1"

[behavior]
terminal_profile = "WSL Ubuntu"
security = "RLS-first with WSL isolation"
model = "claude-3.7-sonnet@windows-wsl-optimized"

## Path Management
[path_mappings]
"C:\\Users\\" = "/mnt/c/Users/"
"~/" = "/home/<WSL_USERNAME>/"
"$HOME/" = "/mnt/c/Users/<USER_NAME>/"

[conversion_rules]
auto_convert = true
validate_paths = true
fallback_to_windows = false

## Security Rules
[security]
wsl_extension_version = "0.88.5"
env_var_handling = "isolated"
allowed_commands = [
    "supabase start --wsl",
    "vercel deploy --preview",
    "wsl --shutdown"
]

[permissions]
wsl_root_access = false
auto_sudo = "disabled"
docker_without_sudo = true

## Supabase Integration
[supabase]
wsl_cli_path = "/usr/local/bin/supabase"
windows_cli_path = "C:\\Program Files\\Supabase CLI\\supabase.exe"
migration_checks = "strict"

## Vercel Integration
[vercel]
env_sync = {
    "strategy": "preview-branch",
    "auto_map": {
        "NEXT_PUBLIC_SUPABASE_URL": "SUPABASE_PREVIEW_URL",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY": "SUPABASE_PREVIEW_KEY"
    }
}

[preview]
cold_start_timeout = "8s"
auto_pause = "10m"

## Terminal Configuration
[terminal]
profiles = [
    {
        "name": "PowerShell",
        "path": "powershell.exe",
        "args": ["-NoExit", "-Command", "cd ~/projects"]
    },
    {
        "name": "WSL Ubuntu",
        "path": "wsl.exe",
        "args": ["-d", "Debian", "--cd", "~/projects"]
    }
]

## AI Actions
[ai]
allowed_actions = [
    "schema_migration",
    "env_var_sync",
    "wsl_path_conversion"
]

## File Patterns
[paths]
include = [
    "supabase/**/*.sql",
    "src/app/**/*.ts*",
    "vercel.json"
]
exclude = ["supabase/data/*"]

## Extension Management
[extensions]
auto_update = false
allowed_extensions = {
    "ms-vscode-remote.remote-wsl": "0.88.5"
}
wsl_extension_auto_install = false
wsl_extension_version = "0.88.5"

## Environment Validation
[validation]
checks = [
    {
        "name": "WSL_PATH",
        "command": "wsl --status",
        "expected": "Ubuntu",
        "required": true
    },
    {
        "name": "SUPABASE_VERSION",
        "command": "supabase --version",
        "expected": "3.2.1",
        "required": true
    }
]

## Troubleshooting
[troubleshooting]
rules = [
    {
        "match": "WSL connection failed",
        "script": "powershell.exe -ExecutionPolicy Bypass -File \"C:\\Users\\<USER_NAME>\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin\\fixWSLNew.ps1\"",
        "description": "Fix WSL connection issues"
    },
    {
        "match": "Docker service not running",
        "script": "net start com.docker.service",
        "description": "Start Docker service"
    }
] 